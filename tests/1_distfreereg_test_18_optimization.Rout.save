
R Under development (unstable) (2024-11-03 r87286 ucrt) -- "Unsuffered Consequences"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(distfreereg)
> set.seed(20240227)
> n <- 1e2
> func <- function(x, theta) theta[1] + theta[2]*x[1] + theta[3]*x[2]
> Sig <- rWishart(1, df = n, Sigma = diag(n))[,,1]
> theta <- c(2,5,1)
> X <- matrix(rexp(2*n, rate = 1), ncol = 2)
> Y <- distfreereg:::f2ftheta(f = func, X)(theta) +
+   as.vector(distfreereg:::rmvnorm(n = n, reps = 1, mean = rep(0,n), SqrtSigma = distfreereg:::matsqrt(Sig)))
> 
> dfr_1 <- distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE)
> dfr_2 <- distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+                      control = list(optimization_fun = nlm,
+                                     fun_to_optimize_arg = "f",
+                                     theta_init_arg = "p",
+                                     theta_hat_name = "estimate"))
> dfr_1

Number of observations: 100 
Monte Carlo simulations: 10000 

Estimated parameter values:
   theta1     theta2     theta3 
2.006e+00  4.805e+00  1.017e+00 

Observed statistics:
Stat      Value  Pr(>Value)       MCSE 
  KS  8.031e-01   4.240e-01  4.942e-03 
 CvM  1.350e-01   4.169e-01  4.930e-03 
---
`MCSE' is the Monte Carlo standard error of the estimated p-value.

> dfr_2

Number of observations: 100 
Monte Carlo simulations: 10000 

Estimated parameter values:
   theta1     theta2     theta3 
2.006e+00  4.805e+00  1.017e+00 

Observed statistics:
Stat      Value  Pr(>Value)       MCSE 
  KS  8.031e-01   4.283e-01  4.948e-03 
 CvM  1.350e-01   4.242e-01  4.942e-03 
---
`MCSE' is the Monte Carlo standard error of the estimated p-value.

> 
> lapply(dfr_1$optimization_output[-5], round, digits = 4)
$par
theta1 theta2 theta3 
2.0062 4.8048 1.0169 

$value
[1] 79.9318

$counts
function gradient 
      23        7 

$convergence
[1] 0

> lapply(dfr_2$optimization_output[-5], round, digits = 4)
$minimum
[1] 79.9318

$estimate
[1] 2.0062 4.8048 1.0169

$gradient
[1] 0 0 0

$code
[1] 1

> 
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = nlm,
+                            fun_to_optimize_arg = "f",
+                            theta_hat_name = "estimate")),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control list element "theta_init_arg" must be a character string
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = nlm,
+                            fun_to_optimize_arg = "f",
+                            theta_init_arg = "p")),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control list element "theta_hat_name" must be a character vector of length 1
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = nlm,
+                            fun_to_optimize_arg = "f",
+                            theta_hat_name = "estimate")),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control list element "theta_init_arg" must be a character string
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = nlm,
+                            theta_hat_name = "estimate",
+                            theta_init_arg = "p")),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control list element "fun_to_optimize_arg" must be a character string
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = "nlm",
+                            fun_to_optimize_arg = "f",
+                            theta_hat_name = "estimate",
+                            theta_init_arg = "p")),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control list element "optimization_fun" must be a function
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = nlm,
+                            fun_to_optimize_arg = c("f", "g"),
+                            theta_hat_name = "estimate",
+                            theta_init_arg = "p")),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control list element "fun_to_optimize_arg" must have length 1
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = nlm,
+                            fun_to_optimize_arg = "f",
+                            theta_hat_name = c("estimate", "b"),
+                            theta_init_arg = "p")),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control list element "theta_hat_name" must have length 1
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = nlm,
+                            fun_to_optimize_arg = "f",
+                            theta_hat_name = "estimate",
+                            theta_init_arg = c("p", "q"))),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control list element "theta_init_arg" must have length 1
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = nlm,
+                            fun_to_optimize_arg = "func",
+                            theta_hat_name = "estimate",
+                            theta_init_arg = "p")),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control list element "fun_to_optimize_arg" must be the name of an argument of optimization_fun
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = nlm,
+                            fun_to_optimize_arg = "f",
+                            theta_hat_name = "est",
+                            theta_init_arg = "p")),
+          error = function(e) warning(e))
Warning message:
In distfreereg.function(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig),  :
  No element with name "est" found in optimization output
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(optimization_fun = nlm,
+                            fun_to_optimize_arg = "f",
+                            theta_hat_name = "estimate",
+                            theta_init_arg = "pq")),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control list element "theta_init_arg" must be the name of an argument of optimization_fun
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+             control = list(fun_to_optimize_arg = "func",
+                            theta_hat_name = "estimate",
+                            theta_init_arg = "p")),
+          error = function(e) warning(e))

Number of observations: 100 
Monte Carlo simulations: 10000 

Estimated parameter values:
   theta1     theta2     theta3 
2.006e+00  4.805e+00  1.017e+00 

Observed statistics:
Stat      Value  Pr(>Value)       MCSE 
  KS  8.031e-01   4.255e-01  4.944e-03 
 CvM  1.350e-01   4.268e-01  4.946e-03 
---
`MCSE' is the Monte Carlo standard error of the estimated p-value.

Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  No alternative optimization function specified; using optim() by default, ignoring "fun_to_optimize_arg", "theta_init_arg", and "theta_hat_name"
> 
> 
> proc.time()
   user  system elapsed 
   1.29    0.15    1.43 
