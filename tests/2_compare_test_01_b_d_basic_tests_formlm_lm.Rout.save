
R version 4.4.1 (2024-06-14 ucrt) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(distfreereg)
> set.seed(20240308)
> n <- 5
> Sig <- diag(rexp(n))
> theta <- c(2,5)
> true_func <- function(theta, x) theta[1]*x[1] + theta[2]*x[2]
> test_func <- function(theta, x) theta[1]*x[1] + theta[2]*x[2]^2
> true_form <- c ~ a + b - 1
> test_form <- c ~ a + I(b^2) - 1
> true_data <- data.frame(a = rexp(n, rate = 1), b = rnorm(n))
> true_X <- as.matrix(true_data)
> X <- true_X + rexp(length(true_X))
> data <- as.data.frame(X)
> true_data[["c"]] <- theta[1]*true_data[["a"]] + theta[2]*true_data[["b"]]
> data[["c"]] <- 5*data[["a"]] - 4*data[["b"]]^2
> true_m <- lm(true_form, data = true_data)
> test_m <- lm(test_form, data = data)
> 
> # Each true/test mean pair has 16 possibilities for which X/data values are
> # given. These are specified below by a four-digit binary sequence indicating
> # the presence/absence of each term in the call, in the following order:
> # true_data, data, true_X, X. For example, "0011" indicates that only
> # true_X and X are provided.
> 
> ###########################################
> #### true_mean form (lm), test_mean lm ####
> ####    should work exactly for 1000   ####
> ###########################################
> 
> # 0000
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  # true_data = true_data,
+                  # data = data,
+                  # true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1000
> set.seed(20240308)
> compare(true_mean = true_form,
+         true_method = "lm",
+         test_mean = test_m,
+         true_data = true_data,
+         # data = data,
+         # true_X = true_X,
+         # X = X,
+         true_covariance = list(Sigma = Sig),
+         reps = 10, B = 10, prog = Inf, theta = theta)
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
$call
compare(true_mean = true_form, true_method = "lm", true_covariance = list(Sigma = Sig), 
    true_data = true_data, theta = theta, reps = 10, prog = Inf, 
    test_mean = test_m, B = 10)

$Y_mean
         1          2          3          4          5 
 2.8541223 -4.9408780  2.2206047  0.4625378  4.2549822 

$errors
            [,1]        [,2]       [,3]        [,4]       [,5]         [,6]
[1,] -1.24255131  0.95961843 -0.1768879  2.24019647 -1.5986673  0.624380014
[2,]  0.08211882  0.60845910  0.2007393 -0.09953149 -0.7995531 -0.006416308
[3,] -0.02106319  0.07283014  0.1739816  0.02478956  0.1643450 -0.073718445
[4,]  0.75422766 -0.49333377 -0.4797648  0.39830473 -0.3655695 -0.781565671
[5,] -0.09657357 -0.01204965 -0.9947559  1.12564962  0.3297202  0.429430516
            [,7]        [,8]       [,9]      [,10]
[1,] -0.47295169  1.66665166  0.1902328  0.7212261
[2,]  0.77409857 -0.35816757 -0.5561163 -0.4176708
[3,]  0.02310508  0.01643184 -0.2712258 -0.2906095
[4,]  0.32946376  0.46219422  0.1170619  0.6950060
[5,] -1.04100415  0.92449513  2.1373433 -1.5912040

$theta
[1] 2 5

$true_mean
c ~ a + b - 1

$true_covariance
$true_covariance$Sigma
         [,1]      [,2]       [,3]      [,4]     [,5]
[1,] 1.808104 0.0000000 0.00000000 0.0000000 0.000000
[2,] 0.000000 0.6205029 0.00000000 0.0000000 0.000000
[3,] 0.000000 0.0000000 0.08302804 0.0000000 0.000000
[4,] 0.000000 0.0000000 0.00000000 0.1695778 0.000000
[5,] 0.000000 0.0000000 0.00000000 0.0000000 1.307579

$true_covariance$SqrtSigma
         [,1]    [,2]      [,3]      [,4]     [,5]
[1,] 1.344657 0.00000 0.0000000 0.0000000 0.000000
[2,] 0.000000 0.78772 0.0000000 0.0000000 0.000000
[3,] 0.000000 0.00000 0.2881459 0.0000000 0.000000
[4,] 0.000000 0.00000 0.0000000 0.4117982 0.000000
[5,] 0.000000 0.00000 0.0000000 0.0000000 1.143494


$true_X
NULL

$true_data
          a           b          c
1 0.7951751  0.25275442  2.8541223
2 0.5245581 -1.19799882 -4.9408780
3 1.1366463 -0.01053757  2.2206047
4 0.5601406 -0.13154869  0.4625378
5 1.4904015  0.25483584  4.2549822

$test_mean

Call:
lm(formula = test_form, data = data)

Coefficients:
     a  I(b^2)  
     5      -4  


$covariance
$covariance$SqrtSigma
[1] 3.393409

$covariance$Q
[1] 0.2946889


$X
NULL

$data
NULL

$observed_stats
          KS       CvM
1  0.7907023 0.1873888
2  0.8129585 0.2315851
3  0.8378801 0.2368010
4  0.7704468 0.1991003
5  0.8237023 0.2187189
6  0.8299484 0.2404592
7  0.8127462 0.2073597
8  0.7862492 0.2021399
9  0.8184931 0.2144116
10 0.7855338 0.1937591

$mcsim_stats
$mcsim_stats$KS
 [1] 0.5324074 0.9456040 0.6496223 0.4059866 0.2960080 0.5992495 0.3997993
 [8] 0.3583186 0.7054823 1.3070893

$mcsim_stats$CvM
 [1] 0.08770319 0.27077216 0.18435061 0.07558203 0.03579942 0.11209979
 [7] 0.06102974 0.06266293 0.20686990 0.51932776


$p
    KS CvM
1  0.2 0.3
2  0.2 0.2
3  0.2 0.2
4  0.2 0.3
5  0.2 0.2
6  0.2 0.2
7  0.2 0.2
8  0.2 0.3
9  0.2 0.2
10 0.2 0.3

attr(,"class")
[1] "compare"
> 
> # 0100
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  # true_data = true_data,
+                  data = data,
+                  # true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1100
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  true_data = true_data,
+                  data = data,
+                  # true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  data must be NULL when test_mean is an lm object
> 
> # 0010
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  # true_data = true_data,
+                  # data = data,
+                  true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1010
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  true_data = true_data,
+                  # data = data,
+                  true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_X must be NULL if true_mean is not a function
> 
> # 0110
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  # true_data = true_data,
+                  data = data,
+                  true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1110
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  true_data = true_data,
+                  data = data,
+                  true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  data must be NULL when test_mean is an lm object
> 
> # 0001
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  # true_data = true_data,
+                  # data = data,
+                  # true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> # 1001
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  true_data = true_data,
+                  # data = data,
+                  # true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  X must be NULL when test_mean has a formula method
> 
> # 0101
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  # true_data = true_data,
+                  data = data,
+                  # true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1101
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  true_data = true_data,
+                  data = data,
+                  # true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  data must be NULL when test_mean is an lm object
> 
> # 0011
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  # true_data = true_data,
+                  # data = data,
+                  true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1011
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  true_data = true_data,
+                  # data = data,
+                  true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  X must be NULL when test_mean has a formula method
> 
> # 0111
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  # true_data = true_data,
+                  data = data,
+                  true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1111
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_m,
+                  true_data = true_data,
+                  data = data,
+                  true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  data must be NULL when test_mean is an lm object
> 
> proc.time()
   user  system elapsed 
   0.40    0.15    0.87 
