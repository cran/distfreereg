
R version 4.4.1 (2024-06-14 ucrt) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(distfreereg)
> set.seed(20240419)
> 
> n <- 1e2
> func <- function(x, theta) theta[1] + theta[2]*x[1] + theta[3]*x[2] + theta[4]*x[3] + theta[5]*x[4]
> Sig <- diag(rexp(n))
> w <- 1/diag(Sig)
> theta <- c(2,5,-1,7,3)
> X <- matrix(rexp(4*n, rate = 1), ncol = 4)
> Y <- distfreereg:::f2ftheta(f = func, X)(theta) +
+   as.vector(distfreereg:::rmvnorm(n = n, reps = 1, mean = rep(0,n), SqrtSigma = distfreereg:::matsqrt(Sig)))
> df <- as.data.frame(cbind(Y, X))
> colnames(df) <- c("y", "a", "b", "c", "d")
> lm_form <- y + c ~ a + b
> nls_form <- y + c ~ e + f*a
> m_lm <- lm(lm_form, data = df, weights = w)
> m_nls <- nls(nls_form, data = df, weights = w)
Warning message:
In nls(nls_form, data = df, weights = w) :
  No starting values specified for some parameters.
Initializing 'e', 'f' to '1.'.
Consider specifying 'start' or using a selfStart model
> 
> tryCatch(distfreereg(test_mean = lm_form, data = df, covariance = list(Sigma = Sig),
+                      theta_init = c(1,1,1)),
+          error = function(e) warning(e))
Warning message:
In validate_single_response_term(form = test_mean) :
  model formula must have a single response term
> tryCatch(distfreereg(test_mean = m_lm),
+          error = function(e) warning(e))
Warning message:
In validate_single_response_term(form = test_mean) :
  model formula must have a single response term
> tryCatch(distfreereg(test_mean = nls_form, data = df, covariance = list(Sigma = Sig),
+                      method = "nls"),
+          error = function(e) warning(e))
Warning message:
In validate_single_response_term(form = test_mean) :
  model formula must have a single response term
> tryCatch(distfreereg(test_mean = m_nls),
+          error = function(e) warning(e))
Warning message:
In validate_single_response_term(form = test_mean) :
  model formula must have a single response term
> 
> proc.time()
   user  system elapsed 
   0.18    0.14    0.28 
