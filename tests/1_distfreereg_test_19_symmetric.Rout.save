
R version 4.4.1 (2024-06-14 ucrt) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(distfreereg)
> set.seed(20240227)
> n <- 1e2
> func <- function(x, theta) theta[1] + theta[2]*x[1] + theta[3]*x[2]
> Sig <- rWishart(1, df = n, Sigma = diag(n))[,,1]
> theta <- c(2,5,1)
> X <- matrix(rexp(2*n, rate = 1), ncol = 2)
> Y <- distfreereg:::f2ftheta(f = func, X)(theta) +
+   as.vector(distfreereg:::rmvnorm(n = n, reps = 1, mean = rep(0,n), SqrtSigma = distfreereg:::matsqrt(Sig)))
> 
> set.seed(20240227)
> dfr_1 <- distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE)
> set.seed(20240227)
> dfr_2 <- distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+                      control = list(symmetric = FALSE))
> 
> identical(dfr_1[["epsp"]], dfr_2[["epsp"]])# TRUE
[1] TRUE
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1,1), verbose = FALSE,
+                      control = list(symmetric = TRUE)),
+          error = function(e) warning(e))
Warning message:
In validate_args_distfreereg_function(Y = Y, X = X, test_mean = test_mean,  :
  control element "symmetric" must be NULL, FALSE, or a named list
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(P = solve(Sig)), theta_init = c(1,1,1), verbose = FALSE,
+                      control = list(symmetric = list(tol = 1e-200))),
+          error = function(e) warning(e))
Warning message:
In validate_sqmat(covariance_list[[x]], n, symmetric, message = c("Error in validating ",  :
  Error in validating covariance element P (length>1): covariance_list[[x]] is not symmetric
> 
> tryCatch(distfreereg(Y = Y, X = X, test_mean = func, covariance = list(P = matrix(rnorm(n^2), nrow = n)),
+                      theta_init = c(1,1,1), verbose = FALSE, control = list(symmetric = FALSE)),
+          error = function(e) warning(e))
Warning message:
In matsqrt(covariance_list[["P"]]) :
  covariance_list[["P"]] has eigenvalues less than the tolerance, the smallest of which is -19.3976879510803
> 
> 
> proc.time()
   user  system elapsed 
   1.53    0.12    1.62 
