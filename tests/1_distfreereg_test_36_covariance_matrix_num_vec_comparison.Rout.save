
R version 4.4.1 (2024-06-14 ucrt) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(distfreereg)
> set.seed(20240715)
> 
> n <- 1e2
> func <- function(x, theta) theta[1] + theta[2]*x[1] + theta[3]*x[2] + theta[4]*x[3] + theta[5]*x[4]
> Sig_number <- 5
> Sig_vector <- rep(5, n)
> Sig_matrix <- diag(Sig_vector)
> theta <- c(2,5,-1,7,3)
> X <- matrix(rexp(4*n, rate = 1), ncol = 4)
> Y <- distfreereg:::f2ftheta(f = func, X)(theta) + rnorm(n, sd = sqrt(Sig_number))
> 
> set.seed(20240715)
> dfr_num <- distfreereg(test_mean = func, Y = Y, X = X, theta_init = c(1,1,1,1,1),
+                        covariance = list(Sigma = Sig_number), verbose = FALSE)
> 
> set.seed(20240715)
> dfr_vec <- distfreereg(test_mean = func, Y = Y, X = X, theta_init = c(1,1,1,1,1),
+                        covariance = list(Sigma = Sig_vector), verbose = FALSE)
> 
> set.seed(20240715)
> dfr_mat <- distfreereg(test_mean = func, Y = Y, X = X, theta_init = c(1,1,1,1,1),
+                        covariance = list(Sigma = Sig_matrix), verbose = FALSE)
> 
> identical(dfr_num$covariance, dfr_vec$covariance)# FALSE
[1] FALSE
> identical(dfr_num$covariance, dfr_mat$covariance)# FALSE
[1] FALSE
> identical(dfr_vec$covariance, dfr_mat$covariance)# FALSE
[1] FALSE
> 
> identical(dfr_num$theta_hat, dfr_vec$theta_hat)# TRUE
[1] TRUE
> identical(dfr_num$theta_hat, dfr_mat$theta_hat)# TRUE
[1] TRUE
> 
> identical(dfr_num$observed_stats, dfr_vec$observed_stats)# TRUE
[1] TRUE
> identical(dfr_num$observed_stats, dfr_mat$observed_stats)# TRUE
[1] TRUE
> 
> identical(dfr_num$p, dfr_vec$p)# TRUE
[1] TRUE
> identical(dfr_num$p, dfr_mat$p)# TRUE
[1] TRUE
> 
> 
> 
> # Test a non-constant vector
> set.seed(20240715)
> Sig_vector <- rexp(n)
> Sig_matrix <- diag(Sig_vector)
> 
> set.seed(20240715)
> dfr_vec <- distfreereg(test_mean = func, Y = Y, X = X, theta_init = c(1,1,1,1,1),
+                        covariance = list(Sigma = Sig_vector), verbose = FALSE)
> 
> set.seed(20240715)
> dfr_mat <- distfreereg(test_mean = func, Y = Y, X = X, theta_init = c(1,1,1,1,1),
+                        covariance = list(Sigma = Sig_matrix), verbose = FALSE)
> 
> identical(dfr_vec$covariance, dfr_mat$covariance)# FALSE
[1] FALSE
> identical(dfr_vec$theta_hat, dfr_mat$theta_hat)# TRUE
[1] TRUE
> identical(dfr_vec$observed_stats, dfr_mat$observed_stats)# TRUE
[1] TRUE
> identical(dfr_vec$p, dfr_mat$p)# TRUE
[1] TRUE
> 
> proc.time()
   user  system elapsed 
   4.64    0.23    6.09 
