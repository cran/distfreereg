
R version 4.4.2 (2024-10-31 ucrt) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(distfreereg)
> set.seed(20240319)
> n <- 1e2
> func <- function(x, theta) theta[1] + theta[2]*x
> Sig <- rWishart(1, df = n, Sigma = diag(n))[,,1]
> theta <- c(2,5)
> X <- matrix(rexp(n, rate = 1))
> Y <- distfreereg:::f2ftheta(f = func, X)(theta) +
+   as.vector(distfreereg:::rmvnorm(n = n, reps = 1, mean = rep(0,n), SqrtSigma = distfreereg:::matsqrt(Sig)))
> set.seed(20240319)
> dfrfunc_1 <- distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig), theta_init = c(1,1), verbose = FALSE)
> set.seed(20240319)
> dfrfunc_2 <- distfreereg(Y = Y, X = X, test_mean = func, theta_init = c(1,1), verbose = FALSE,
+                          covariance = list(Sigma = Sig), override = list(res_order = dfrfunc_1[["res_order"]]))
> set.seed(20240319)
> dfrfunc_3 <- distfreereg(Y = Y, X = X, test_mean = func, verbose = FALSE,
+                          covariance = list(Sigma = Sig), override = list(theta_hat = dfrfunc_1[["theta_hat"]]))
> set.seed(20240319)
> dfrfunc_4 <- distfreereg(Y = Y, X = X, test_mean = func, theta_init = c(1,1), verbose = FALSE,
+                          covariance = list(Sigma = Sig), override = list(r = dfrfunc_1[["r"]]))
> set.seed(20240319)
> dfrfunc_5 <- distfreereg(Y = Y, X = X, test_mean = func, theta_init = c(1,1), verbose = FALSE,
+                          covariance = list(Sigma = Sig), override = list(mcsim_stats = dfrfunc_1[["mcsim_stats"]]))
> 
> message('identical(dfrfunc_1[["epsp"]], dfrfunc_2[["epsp"]]) (should be TRUE): ', identical(dfrfunc_1[["epsp"]], dfrfunc_2[["epsp"]]))
identical(dfrfunc_1[["epsp"]], dfrfunc_2[["epsp"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["epsp"]], dfrfunc_3[["epsp"]]) (should be TRUE): ', identical(dfrfunc_1[["epsp"]], dfrfunc_3[["epsp"]]))
identical(dfrfunc_1[["epsp"]], dfrfunc_3[["epsp"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["epsp"]], dfrfunc_4[["epsp"]]) (should be TRUE): ', identical(dfrfunc_1[["epsp"]], dfrfunc_4[["epsp"]]))
identical(dfrfunc_1[["epsp"]], dfrfunc_4[["epsp"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["epsp"]], dfrfunc_5[["epsp"]]) (should be TRUE): ', identical(dfrfunc_1[["epsp"]], dfrfunc_5[["epsp"]]))
identical(dfrfunc_1[["epsp"]], dfrfunc_5[["epsp"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["p"]], dfrfunc_5[["p"]]) (should be TRUE): ', identical(dfrfunc_1[["p"]], dfrfunc_5[["p"]]))
identical(dfrfunc_1[["p"]], dfrfunc_5[["p"]]) (should be TRUE): TRUE
> 
> 
> 
> 
> 
> my_res_order <- sample(1:n)
> my_theta_hat <- c(7,13)
> my_r <- dfrfunc_1[["r"]][sample(1:n),]
> my_mcsim_stats <- list(KS = dfrfunc_1[["mcsim_stats"]][["KS"]]^2,
+                        CvM = dfrfunc_1[["mcsim_stats"]][["CvM"]]^2)
> set.seed(20240319)
> dfrfunc_5 <- distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig),
+                          theta_init = c(1,1), verbose = FALSE,
+                          override = list(res_order = my_res_order))
> set.seed(20240319)
> dfrfunc_6 <- distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig),
+                          theta_init = c(1,1), verbose = FALSE,
+                          override = list(theta_hat = my_theta_hat))
> set.seed(20240319)
> dfrfunc_7 <- distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig),
+                          theta_init = c(1,1), verbose = FALSE,
+                          override = list(r = my_r))
> set.seed(20240319)
> dfrfunc_8 <- distfreereg(Y = Y, X = X, test_mean = func, covariance = list(Sigma = Sig),
+                          theta_init = c(1,1), verbose = FALSE,
+                          override = list(mcsim_stats = my_mcsim_stats))
> 
> # Verify that specified overrides are correct.
> message('identical(dfrfunc_1[["res_order"]], dfrfunc_5[["res_order"]]) (should be FALSE): ', identical(dfrfunc_1[["res_order"]], dfrfunc_5[["res_order"]]))
identical(dfrfunc_1[["res_order"]], dfrfunc_5[["res_order"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["theta_hat"]], dfrfunc_6[["theta_hat"]]) (should be FALSE): ', identical(dfrfunc_1[["theta_hat"]], dfrfunc_6[["theta_hat"]]))
identical(dfrfunc_1[["theta_hat"]], dfrfunc_6[["theta_hat"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["r"]], dfrfunc_7[["r"]]) (should be FALSE): ', identical(dfrfunc_1[["r"]], dfrfunc_7[["r"]]))
identical(dfrfunc_1[["r"]], dfrfunc_7[["r"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_8[["mcsim_stats"]]) (should be FALSE): ', identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_8[["mcsim_stats"]]))
identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_8[["mcsim_stats"]]) (should be FALSE): FALSE
> message('identical(my_res_order, dfrfunc_5[["res_order"]]) (should be TRUE): ', identical(my_res_order, dfrfunc_5[["res_order"]]))
identical(my_res_order, dfrfunc_5[["res_order"]]) (should be TRUE): TRUE
> message('identical(my_theta_hat, dfrfunc_6[["theta_hat"]]) (should be TRUE): ', identical(my_theta_hat, dfrfunc_6[["theta_hat"]]))
identical(my_theta_hat, dfrfunc_6[["theta_hat"]]) (should be TRUE): TRUE
> message('identical(my_r, dfrfunc_7[["r"]]) (should be TRUE): ', identical(my_r, dfrfunc_7[["r"]]))
identical(my_r, dfrfunc_7[["r"]]) (should be TRUE): TRUE
> message('identical(my_mcsim_stats, dfrfunc_8[["mcsim_stats"]]) (should be TRUE): ', identical(my_mcsim_stats, dfrfunc_8[["mcsim_stats"]]))
identical(my_mcsim_stats, dfrfunc_8[["mcsim_stats"]]) (should be TRUE): TRUE
> 
> # Verify that other things changed or not, as appropriate.
> message('identical(dfrfunc_1[["theta_hat"]], dfrfunc_5[["theta_hat"]]) (should be TRUE): ', identical(dfrfunc_1[["theta_hat"]], dfrfunc_5[["theta_hat"]]))
identical(dfrfunc_1[["theta_hat"]], dfrfunc_5[["theta_hat"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["optimization_output"]], dfrfunc_5[["optimization_output"]]) (should be TRUE): ', identical(dfrfunc_1[["optimization_output"]], dfrfunc_5[["optimization_output"]]))
identical(dfrfunc_1[["optimization_output"]], dfrfunc_5[["optimization_output"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["fitted_values"]], dfrfunc_5[["fitted_values"]]) (should be TRUE): ', identical(dfrfunc_1[["fitted_values"]], dfrfunc_5[["fitted_values"]]))
identical(dfrfunc_1[["fitted_values"]], dfrfunc_5[["fitted_values"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["J"]], dfrfunc_5[["J"]]) (should be TRUE): ', identical(dfrfunc_1[["J"]], dfrfunc_5[["J"]]))
identical(dfrfunc_1[["J"]], dfrfunc_5[["J"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["r"]], dfrfunc_5[["r"]]) (should be FALSE): ', identical(dfrfunc_1[["r"]], dfrfunc_5[["r"]]))
identical(dfrfunc_1[["r"]], dfrfunc_5[["r"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["r_tilde"]], dfrfunc_5[["r_tilde"]]) (should be FALSE): ', identical(dfrfunc_1[["r_tilde"]], dfrfunc_5[["r_tilde"]]))
identical(dfrfunc_1[["r_tilde"]], dfrfunc_5[["r_tilde"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["mu"]], dfrfunc_5[["mu"]]) (should be TRUE): ', identical(dfrfunc_1[["mu"]], dfrfunc_5[["mu"]]))
identical(dfrfunc_1[["mu"]], dfrfunc_5[["mu"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_5[["residuals"]][["raw"]]) (should be TRUE): ', identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_5[["residuals"]][["raw"]]))
identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_5[["residuals"]][["raw"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_5[["residuals"]][["sphered"]]) (should be TRUE): ', identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_5[["residuals"]][["sphered"]]))
identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_5[["residuals"]][["sphered"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_5[["residuals"]][["transformed"]]) (should be FALSE): ', identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_5[["residuals"]][["transformed"]]))
identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_5[["residuals"]][["transformed"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["epsp"]], dfrfunc_5[["epsp"]]) (should be FALSE): ', identical(dfrfunc_1[["epsp"]], dfrfunc_5[["epsp"]]))
identical(dfrfunc_1[["epsp"]], dfrfunc_5[["epsp"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["observed_stats"]], dfrfunc_5[["observed_stats"]]) (should be FALSE): ', identical(dfrfunc_1[["observed_stats"]], dfrfunc_5[["observed_stats"]]))
identical(dfrfunc_1[["observed_stats"]], dfrfunc_5[["observed_stats"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_5[["mcsim_stats"]]) (should be FALSE): ', identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_5[["mcsim_stats"]]))
identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_5[["mcsim_stats"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["p"]], dfrfunc_5[["p"]]) (should be FALSE): ', identical(dfrfunc_1[["p"]], dfrfunc_5[["p"]]))
identical(dfrfunc_1[["p"]], dfrfunc_5[["p"]]) (should be FALSE): FALSE
> 
> message('identical(dfrfunc_1[["theta_hat"]], dfrfunc_6[["theta_hat"]]) (should be FALSE): ', identical(dfrfunc_1[["theta_hat"]], dfrfunc_6[["theta_hat"]]))
identical(dfrfunc_1[["theta_hat"]], dfrfunc_6[["theta_hat"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["optimization_output"]], dfrfunc_6[["optimization_output"]]) (should be FALSE): ', identical(dfrfunc_1[["optimization_output"]], dfrfunc_6[["optimization_output"]]))
identical(dfrfunc_1[["optimization_output"]], dfrfunc_6[["optimization_output"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["fitted_values"]], dfrfunc_6[["fitted_values"]]) (should be FALSE): ', identical(dfrfunc_1[["fitted_values"]], dfrfunc_6[["fitted_values"]]))
identical(dfrfunc_1[["fitted_values"]], dfrfunc_6[["fitted_values"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["J"]], dfrfunc_6[["J"]]) (should be FALSE): ', identical(dfrfunc_1[["J"]], dfrfunc_6[["J"]]))
identical(dfrfunc_1[["J"]], dfrfunc_6[["J"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["r"]], dfrfunc_6[["r"]]) (should be TRUE): ', identical(dfrfunc_1[["r"]], dfrfunc_6[["r"]]))
identical(dfrfunc_1[["r"]], dfrfunc_6[["r"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["r_tilde"]], dfrfunc_6[["r_tilde"]]) (should be FALSE): ', identical(dfrfunc_1[["r_tilde"]], dfrfunc_6[["r_tilde"]]))
identical(dfrfunc_1[["r_tilde"]], dfrfunc_6[["r_tilde"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["mu"]], dfrfunc_6[["mu"]]) (should be FALSE): ', identical(dfrfunc_1[["mu"]], dfrfunc_6[["mu"]]))
identical(dfrfunc_1[["mu"]], dfrfunc_6[["mu"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_6[["residuals"]][["raw"]]) (should be FALSE): ', identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_6[["residuals"]][["raw"]]))
identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_6[["residuals"]][["raw"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_6[["residuals"]][["sphered"]]) (should be FALSE): ', identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_6[["residuals"]][["sphered"]]))
identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_6[["residuals"]][["sphered"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_6[["residuals"]][["transformed"]]) (should be FALSE): ', identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_6[["residuals"]][["transformed"]]))
identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_6[["residuals"]][["transformed"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["epsp"]], dfrfunc_6[["epsp"]]) (should be FALSE): ', identical(dfrfunc_1[["epsp"]], dfrfunc_6[["epsp"]]))
identical(dfrfunc_1[["epsp"]], dfrfunc_6[["epsp"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["observed_stats"]], dfrfunc_6[["observed_stats"]]) (should be FALSE): ', identical(dfrfunc_1[["observed_stats"]], dfrfunc_6[["observed_stats"]]))
identical(dfrfunc_1[["observed_stats"]], dfrfunc_6[["observed_stats"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_6[["mcsim_stats"]]) (should be TRUE): ', identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_6[["mcsim_stats"]]))
identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_6[["mcsim_stats"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["p"]], dfrfunc_6[["p"]]) (should be FALSE): ', identical(dfrfunc_1[["p"]], dfrfunc_6[["p"]]))
identical(dfrfunc_1[["p"]], dfrfunc_6[["p"]]) (should be FALSE): FALSE
> 
> message('identical(dfrfunc_1[["theta_hat"]], dfrfunc_7[["theta_hat"]]) (should be TRUE): ', identical(dfrfunc_1[["theta_hat"]], dfrfunc_7[["theta_hat"]]))
identical(dfrfunc_1[["theta_hat"]], dfrfunc_7[["theta_hat"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["optimization_output"]], dfrfunc_7[["optimization_output"]]) (should be TRUE): ', identical(dfrfunc_1[["optimization_output"]], dfrfunc_7[["optimization_output"]]))
identical(dfrfunc_1[["optimization_output"]], dfrfunc_7[["optimization_output"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["fitted_values"]], dfrfunc_7[["fitted_values"]]) (should be TRUE): ', identical(dfrfunc_1[["fitted_values"]], dfrfunc_7[["fitted_values"]]))
identical(dfrfunc_1[["fitted_values"]], dfrfunc_7[["fitted_values"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["J"]], dfrfunc_7[["J"]]) (should be TRUE): ', identical(dfrfunc_1[["J"]], dfrfunc_7[["J"]]))
identical(dfrfunc_1[["J"]], dfrfunc_7[["J"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["r"]], dfrfunc_7[["r"]]) (should be FALSE): ', identical(dfrfunc_1[["r"]], dfrfunc_7[["r"]]))
identical(dfrfunc_1[["r"]], dfrfunc_7[["r"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["r_tilde"]], dfrfunc_7[["r_tilde"]]) (should be FALSE): ', identical(dfrfunc_1[["r_tilde"]], dfrfunc_7[["r_tilde"]]))
identical(dfrfunc_1[["r_tilde"]], dfrfunc_7[["r_tilde"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["mu"]], dfrfunc_7[["mu"]]) (should be TRUE): ', identical(dfrfunc_1[["mu"]], dfrfunc_7[["mu"]]))
identical(dfrfunc_1[["mu"]], dfrfunc_7[["mu"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_7[["residuals"]][["raw"]]) (should be TRUE): ', identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_7[["residuals"]][["raw"]]))
identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_7[["residuals"]][["raw"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_7[["residuals"]][["sphered"]]) (should be TRUE): ', identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_7[["residuals"]][["sphered"]]))
identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_7[["residuals"]][["sphered"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_7[["residuals"]][["transformed"]]) (should be FALSE): ', identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_7[["residuals"]][["transformed"]]))
identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_7[["residuals"]][["transformed"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["epsp"]], dfrfunc_7[["epsp"]]) (should be FALSE): ', identical(dfrfunc_1[["epsp"]], dfrfunc_7[["epsp"]]))
identical(dfrfunc_1[["epsp"]], dfrfunc_7[["epsp"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["observed_stats"]], dfrfunc_7[["observed_stats"]]) (should be FALSE): ', identical(dfrfunc_1[["observed_stats"]], dfrfunc_7[["observed_stats"]]))
identical(dfrfunc_1[["observed_stats"]], dfrfunc_7[["observed_stats"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_7[["mcsim_stats"]]) (should be FALSE): ', identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_7[["mcsim_stats"]]))
identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_7[["mcsim_stats"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["p"]], dfrfunc_7[["p"]]) (should be FALSE): ', identical(dfrfunc_1[["p"]], dfrfunc_7[["p"]]))
identical(dfrfunc_1[["p"]], dfrfunc_7[["p"]]) (should be FALSE): FALSE
> 
> message('identical(dfrfunc_1[["theta_hat"]], dfrfunc_8[["theta_hat"]]) (should be TRUE): ', identical(dfrfunc_1[["theta_hat"]], dfrfunc_8[["theta_hat"]]))
identical(dfrfunc_1[["theta_hat"]], dfrfunc_8[["theta_hat"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["optimization_output"]], dfrfunc_8[["optimization_output"]]) (should be TRUE): ', identical(dfrfunc_1[["optimization_output"]], dfrfunc_8[["optimization_output"]]))
identical(dfrfunc_1[["optimization_output"]], dfrfunc_8[["optimization_output"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["fitted_values"]], dfrfunc_8[["fitted_values"]]) (should be TRUE): ', identical(dfrfunc_1[["fitted_values"]], dfrfunc_8[["fitted_values"]]))
identical(dfrfunc_1[["fitted_values"]], dfrfunc_8[["fitted_values"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["J"]], dfrfunc_8[["J"]]) (should be TRUE): ', identical(dfrfunc_1[["J"]], dfrfunc_8[["J"]]))
identical(dfrfunc_1[["J"]], dfrfunc_8[["J"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["r"]], dfrfunc_8[["r"]]) (should be TRUE): ', identical(dfrfunc_1[["r"]], dfrfunc_8[["r"]]))
identical(dfrfunc_1[["r"]], dfrfunc_8[["r"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["r_tilde"]], dfrfunc_8[["r_tilde"]]) (should be TRUE): ', identical(dfrfunc_1[["r_tilde"]], dfrfunc_8[["r_tilde"]]))
identical(dfrfunc_1[["r_tilde"]], dfrfunc_8[["r_tilde"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["mu"]], dfrfunc_8[["mu"]]) (should be TRUE): ', identical(dfrfunc_1[["mu"]], dfrfunc_8[["mu"]]))
identical(dfrfunc_1[["mu"]], dfrfunc_8[["mu"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_8[["residuals"]][["raw"]]) (should be TRUE): ', identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_8[["residuals"]][["raw"]]))
identical(dfrfunc_1[["residuals"]][["raw"]], dfrfunc_8[["residuals"]][["raw"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_8[["residuals"]][["sphered"]]) (should be TRUE): ', identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_8[["residuals"]][["sphered"]]))
identical(dfrfunc_1[["residuals"]][["sphered"]], dfrfunc_8[["residuals"]][["sphered"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_8[["residuals"]][["transformed"]]) (should be TRUE): ', identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_8[["residuals"]][["transformed"]]))
identical(dfrfunc_1[["residuals"]][["transformed"]], dfrfunc_8[["residuals"]][["transformed"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["epsp"]], dfrfunc_8[["epsp"]]) (should be TRUE): ', identical(dfrfunc_1[["epsp"]], dfrfunc_8[["epsp"]]))
identical(dfrfunc_1[["epsp"]], dfrfunc_8[["epsp"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["observed_stats"]], dfrfunc_8[["observed_stats"]]) (should be TRUE): ', identical(dfrfunc_1[["observed_stats"]], dfrfunc_8[["observed_stats"]]))
identical(dfrfunc_1[["observed_stats"]], dfrfunc_8[["observed_stats"]]) (should be TRUE): TRUE
> message('identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_8[["mcsim_stats"]]) (should be FALSE): ', identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_8[["mcsim_stats"]]))
identical(dfrfunc_1[["mcsim_stats"]], dfrfunc_8[["mcsim_stats"]]) (should be FALSE): FALSE
> message('identical(dfrfunc_1[["p"]], dfrfunc_8[["p"]]) (should be FALSE): ', identical(dfrfunc_1[["p"]], dfrfunc_8[["p"]]))
identical(dfrfunc_1[["p"]], dfrfunc_8[["p"]]) (should be FALSE): FALSE
> 
> proc.time()
   user  system elapsed 
   2.93    0.14    3.06 
