
R version 4.4.2 (2024-10-31 ucrt) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(distfreereg)
> 
> test_mean <- function(x, theta) (theta[1] + theta[2]*x[1] + theta[3]*x[1]^2) * x[2]^(2/3)
> theta <- c(5,2,4)
> X <- cbind(rep(1:8, 9), rep(30 + 20*(0:8), each = 8))
> X <- X[rep(1:72, times = 2),]
> colnames(X) <- c("a", "b")
> 
> set.seed(20240416)
> cdfr_0 <- compare(true_mean = test_mean, true_covariance = list(Sigma = 1),
+                   covariance = list(Sigma = 1),
+                   theta = theta, test_mean = test_mean, theta_init = c(1,1,1),
+                   true_X = X, X = X, ordering = list(2,1), group = TRUE,
+                   reps = 10, B = 10)
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
Repetition 1 of 10
Repetition 2 of 10
Repetition 3 of 10
Repetition 4 of 10
Repetition 5 of 10
Repetition 6 of 10
Repetition 7 of 10
Repetition 8 of 10
Repetition 9 of 10
Repetition 10 of 10
> 
> signif(cdfr_0[["observed_stats"]][["KS"]], digits = 4)
 [1] 0.7448 0.8576 0.3830 0.8541 0.6150 0.7232 1.1040 0.7319 0.3692 0.6845
> signif(cdfr_0[["observed_stats"]][["CvM"]], digits = 4)
 [1] 0.13780 0.16190 0.03056 0.15350 0.05384 0.11910 0.30490 0.10200 0.02472
[10] 0.09432
> signif(cdfr_0[["mcsim_stats"]][["KS"]], digits = 4)
 [1] 0.9281 0.4008 0.4610 0.5711 0.4836 0.4846 0.5753 0.7232 1.0450 0.7582
> signif(cdfr_0[["mcsim_stats"]][["CvM"]], digits = 4)
 [1] 0.12490 0.02543 0.04363 0.06589 0.04187 0.03389 0.06287 0.08206 0.29660
[10] 0.09807
> 
> set.seed(20240416)
> cdfr_1 <- compare(true_mean = test_mean, true_covariance = list(Sigma = 1),
+                   covariance = list(Sigma = 1),
+                   theta = theta, test_mean = test_mean, theta_init = c(1,1,1),
+                   true_X = X, X = X, ordering = list("b", "a"), group = TRUE,
+                   reps = 10, B = 10)
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
Repetition 1 of 10
Repetition 2 of 10
Repetition 3 of 10
Repetition 4 of 10
Repetition 5 of 10
Repetition 6 of 10
Repetition 7 of 10
Repetition 8 of 10
Repetition 9 of 10
Repetition 10 of 10
> 
> message('identical(cdfr_0[["observed_stats"]], cdfr_1[["observed_stats"]]) (should be TRUE): ', identical(cdfr_0[["observed_stats"]], cdfr_1[["observed_stats"]]))
identical(cdfr_0[["observed_stats"]], cdfr_1[["observed_stats"]]) (should be TRUE): TRUE
> message('identical(cdfr_0[["mcsim_stats"]], cdfr_1[["mcsim_stats"]]) (should be TRUE): ', identical(cdfr_0[["mcsim_stats"]], cdfr_1[["mcsim_stats"]]))
identical(cdfr_0[["mcsim_stats"]], cdfr_1[["mcsim_stats"]]) (should be TRUE): TRUE
> 
> 
> set.seed(20240416)
> cdfr_2 <- compare(true_mean = test_mean, true_covariance = list(Sigma = 1),
+                   covariance = list(Sigma = 1),
+                   theta = theta, test_mean = test_mean, theta_init = c(1,1,1),
+                   true_X = X, X = X, ordering = list(1,2), group = TRUE,
+                   reps = 10, B = 10)
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
Repetition 1 of 10
Repetition 2 of 10
Repetition 3 of 10
Repetition 4 of 10
Repetition 5 of 10
Repetition 6 of 10
Repetition 7 of 10
Repetition 8 of 10
Repetition 9 of 10
Repetition 10 of 10
> 
> set.seed(20240416)
> cdfr_3 <- compare(true_mean = test_mean, true_covariance = list(Sigma = 1),
+                   covariance = list(Sigma = 1),
+                   theta = theta, test_mean = test_mean, theta_init = c(1,1,1),
+                   true_X = X, X = X, ordering = list("a", "b"), group = TRUE,
+                   reps = 10, B = 10)
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
Repetition 1 of 10
Repetition 2 of 10
Repetition 3 of 10
Repetition 4 of 10
Repetition 5 of 10
Repetition 6 of 10
Repetition 7 of 10
Repetition 8 of 10
Repetition 9 of 10
Repetition 10 of 10
> 
> set.seed(20240416)
> cdfr_4 <- compare(true_mean = test_mean, true_covariance = list(Sigma = 1),
+                   covariance = list(Sigma = 1),
+                   theta = theta, test_mean = test_mean, theta_init = c(1,1,1),
+                   true_X = X, X = X, ordering = "natural", group = TRUE,
+                   reps = 10, B = 10)
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
Repetition 1 of 10
Repetition 2 of 10
Repetition 3 of 10
Repetition 4 of 10
Repetition 5 of 10
Repetition 6 of 10
Repetition 7 of 10
Repetition 8 of 10
Repetition 9 of 10
Repetition 10 of 10
> 
> message('identical(cdfr_2[["observed_stats"]], cdfr_3[["observed_stats"]]) (should be TRUE): ', identical(cdfr_2[["observed_stats"]], cdfr_3[["observed_stats"]]))
identical(cdfr_2[["observed_stats"]], cdfr_3[["observed_stats"]]) (should be TRUE): TRUE
> message('identical(cdfr_2[["observed_stats"]], cdfr_4[["observed_stats"]]) (should be TRUE): ', identical(cdfr_2[["observed_stats"]], cdfr_4[["observed_stats"]]))
identical(cdfr_2[["observed_stats"]], cdfr_4[["observed_stats"]]) (should be TRUE): TRUE
> message('identical(cdfr_2[["mcsim_stats"]], cdfr_3[["mcsim_stats"]]) (should be TRUE): ', identical(cdfr_2[["mcsim_stats"]], cdfr_3[["mcsim_stats"]]))
identical(cdfr_2[["mcsim_stats"]], cdfr_3[["mcsim_stats"]]) (should be TRUE): TRUE
> message('identical(cdfr_2[["mcsim_stats"]], cdfr_4[["mcsim_stats"]]) (should be TRUE): ', identical(cdfr_2[["mcsim_stats"]], cdfr_4[["mcsim_stats"]]))
identical(cdfr_2[["mcsim_stats"]], cdfr_4[["mcsim_stats"]]) (should be TRUE): TRUE
> 
> proc.time()
   user  system elapsed 
   5.60    0.09    5.70 
