
R version 4.4.1 (2024-06-14 ucrt) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(distfreereg)
> set.seed(20240227)
> 
> n <- 20
> func <- function(x, theta) theta[1] + theta[2]*x
> Sig <- rWishart(1, df = n, Sigma = diag(n))[,,1]
> theta <- c(2,5)
> X <- matrix(rexp(n, rate = 1))
> 
> set.seed(20240227)
> cdfr_1 <- compare(reps = 10, prog = Inf, theta = theta, true_mean = func, true_X = X,
+                   X = X, test_mean = func,
+                   true_covariance = list(Sigma = Sig),
+                   covariance = list(Sigma = Sig),
+                   theta_init = rep(1, length(theta)), keep = "all")
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
> 
> set.seed(20240227)
> cdfr_2 <- compare(reps = 10, prog = Inf, theta = theta, true_mean = func, true_X = X,
+                   X = X, test_mean = func,
+                   true_covariance = list(Sigma = Sig),
+                   covariance = list(Sigma = Sig),
+                   theta_init = rep(1, length(theta)), keep = 1:10)
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
> 
> identical(cdfr_1$dfrs, cdfr_2$dfrs)# TRUE
[1] TRUE
> identical(length(cdfr_1$dfrs), 10L)# TRUE
[1] TRUE
> class(cdfr_1$dfrs)
[1] "list"
> 
> cdfr_3 <- compare(reps = 10, prog = Inf, theta = theta, true_mean = func, true_X = X,
+                   X = X, test_mean = func,
+                   true_covariance = list(Sigma = Sig),
+                   covariance = list(Sigma = Sig),
+                   theta_init = rep(1, length(theta)), keep = c(2,5,9))
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
> names(cdfr_3$dfrs)
[1] "dfr_2" "dfr_5" "dfr_9"
> 
> tryCatch(compare(reps = 10, prog = Inf, theta = theta, true_mean = func, true_X = X,
+                  X = X, test_mean = func,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  theta_init = rep(1, length(theta)), keep = 1:15),
+          error = function(e) warning(e))
Warning message:
In validate_numeric(keep, pos_int = TRUE, min_len = 1, max_len = reps,  :
  keep must have length at most 10
> 
> tryCatch(compare(reps = 10, prog = Inf, theta = theta, true_mean = func, true_X = X,
+                  X = X, test_mean = func,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  theta_init = rep(1, length(theta)), keep = 15),
+          error = function(e) warning(e))
Warning message:
In validate_numeric(keep, pos_int = TRUE, min_len = 1, max_len = reps,  :
  keep must have value(s) less than or equal to 10
> 
> proc.time()
   user  system elapsed 
   1.93    0.14    2.07 
