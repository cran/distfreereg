
R version 4.4.2 (2024-10-31 ucrt) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(distfreereg)
> set.seed(20240308)
> n <- 5
> Sig <- diag(rexp(n))
> theta <- c(2,5)
> true_func <- function(theta, x) theta[1]*x[1] + theta[2]*x[2]
> test_func <- function(theta, x) theta[1]*x[1] + theta[2]*x[2]^2
> true_form <- c ~ a + b - 1
> test_form <- c ~ a + I(b^2) - 1
> true_data <- data.frame(a = rexp(n, rate = 1), b = rnorm(n))
> true_X <- as.matrix(true_data)
> X <- true_X + rexp(length(true_X))
> data <- as.data.frame(X)
> true_data[["c"]] <- theta[1]*true_data[["a"]] + theta[2]*true_data[["b"]]
> data[["c"]] <- 5*data[["a"]] - 4*data[["b"]]^2
> true_m <- lm(true_form, data = true_data)
> test_m <- lm(test_form, data = data)
> 
> # Each true/test mean pair has 16 possibilities for which X/data values are
> # given. These are specified below by a four-digit binary sequence indicating
> # the presence/absence of each term in the call, in the following order:
> # true_data, data, true_X, X. For example, "0011" indicates that only
> # true_X and X are provided.
> 
> ##################################################
> #### true_mean form (lm), test_mean form (lm) ####
> ####       should work exactly for 1100       ####
> ##################################################
> 
> # 0000
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  # true_data = true_data,
+                  # data = data,
+                  # true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1000
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  true_data = true_data,
+                  # data = data,
+                  # true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
Warning message:
In validate_extra_arg_list(extra_arg_list, "distfreereg.formula()") :
  Unused arguments passed to distfreereg.formula() with name(s) Y
> 
> # 0100
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  # true_data = true_data,
+                  data = data,
+                  # true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1100
> set.seed(20240308)
> cdfr <- compare(true_mean = true_form,
+                 true_method = "lm",
+                 test_mean = test_form,
+                 true_data = true_data,
+                 data = data,
+                 # true_X = true_X,
+                 # X = X,
+                 true_covariance = list(Sigma = Sig),
+                 covariance = list(Sigma = Sig),
+                 reps = 10, B = 10, prog = Inf, theta = theta)
Calculating required true covariance specification matrices...
Generating errors...
Running simulation...
> 
> signif(cdfr[["observed_stats"]][["KS"]], digits = 4)
 [1] 3.127 3.354 3.466 3.568 4.108 3.828 2.809 3.657 3.959 3.261
> signif(cdfr[["observed_stats"]][["CvM"]], digits = 4)
 [1] 2.861 4.096 4.208 4.164 5.536 5.396 2.429 4.263 4.960 3.247
> signif(cdfr[["mcsim_stats"]][["KS"]], digits = 4)
 [1] 0.5324 0.9456 0.6496 0.4060 0.2960 0.5992 0.3998 0.3583 0.7055 1.3070
> signif(cdfr[["mcsim_stats"]][["CvM"]], digits = 4)
 [1] 0.08770 0.27080 0.18440 0.07558 0.03580 0.11210 0.06103 0.06266 0.20690
[10] 0.51930
> 
> # 0010
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  # true_data = true_data,
+                  # data = data,
+                  true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1010
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  true_data = true_data,
+                  # data = data,
+                  true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_X must be NULL if true_mean is not a function
> 
> # 0110
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  # true_data = true_data,
+                  data = data,
+                  true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1110
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  true_data = true_data,
+                  data = data,
+                  true_X = true_X,
+                  # X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_X must be NULL if true_mean is not a function
> 
> # 0001
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  # true_data = true_data,
+                  # data = data,
+                  # true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> # 1001
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  true_data = true_data,
+                  # data = data,
+                  # true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  X must be NULL when test_mean has a formula method
> 
> # 0101
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  # true_data = true_data,
+                  data = data,
+                  # true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1101
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  true_data = true_data,
+                  data = data,
+                  # true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  X must be NULL when test_mean has a formula method
> 
> # 0011
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  # true_data = true_data,
+                  # data = data,
+                  true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1011
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  true_data = true_data,
+                  # data = data,
+                  true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  X must be NULL when test_mean has a formula method
> 
> # 0111
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  # true_data = true_data,
+                  data = data,
+                  true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  true_data must be supplied when true_mean is a formula
> 
> # 1111
> set.seed(20240308)
> tryCatch(compare(true_mean = true_form,
+                  true_method = "lm",
+                  test_mean = test_form,
+                  true_data = true_data,
+                  data = data,
+                  true_X = true_X,
+                  X = X,
+                  true_covariance = list(Sigma = Sig),
+                  covariance = list(Sigma = Sig),
+                  reps = 10, B = 10, prog = Inf, theta = theta),
+          error = function(e) warning(e))
Warning message:
In validate_args_compare(true_mean = true_mean, true_method = true_method,  :
  X must be NULL when test_mean has a formula method
> 
> proc.time()
   user  system elapsed 
   0.26    0.09    0.36 
